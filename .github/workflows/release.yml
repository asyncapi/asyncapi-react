name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    name: 'Release NPM, GitHub, GH Pages'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 13
      - name: Install dependencies for library, web-component and playground
        run: npm install
      - name: Bootstrap the project
        run: npm run bootstrap

      # Library
      - name: Run library tests
        run: npm test
      - name: Build library
        run: npm run build-library
      - name: Get version from package.json before release-library step
        id: initversion
        run: echo "::set-output name=version::$(npm run get-lib-version --silent)"
      - name: Release library to NPM and GitHub
        id: release-library
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_NAME: asyncapi-bot
          GIT_AUTHOR_EMAIL: info@asyncapi.io
          GIT_COMMITTER_NAME: asyncapi-bot
          GIT_COMMITTER_EMAIL: info@asyncapi.io
        run: npm run release
      - name: Get version from package.json after release-library step
        id: extractver
        run: echo "::set-output name=version::$(npm run get-lib-version --silent)"

      # Web-component
      - name: Install latest version of library in the web-component # this will update package.json and a lock file for the web-component that will also be pushed to PR with next step
        if: steps.initversion.outputs.version != steps.extractver.outputs.version
        # sleep for 30 seconds before using latest version in web-component, because sometimes NPM needs additional few seconds to `saves` package in registry
        run: |
          sleep 1m
          echo "Log all versions of the package on npm registry"
          npm show @asyncapi/react-component versions
          echo "Log latest version of the package on npm registry"
          npm show @asyncapi/react-component dist-tags.latest
          echo "Starting installation"
          npm install @asyncapi/react-component@${{ steps.extractver.outputs.version }} --save --loglevel verbose
        working-directory: ./web-component
      - name: Build web-component
        run: npm run build-web-component
      - name: Release web-component to NPM
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./web-component/package.json
          tag: ${{ steps.extractver.outputs.version }}
          access: public

      # Playground
      - name: Use latest version in the playground # this will update package.json and a lock file for the playground that will also be pushed to PR with next step
        if: steps.initversion.outputs.version != steps.extractver.outputs.version
        run: npm install @asyncapi/react-component@${{ steps.extractver.outputs.version }} -s
        working-directory: ./playground

      # Pull request
      - name: Create Pull Request with updated package files
        if: steps.initversion.outputs.version != steps.extractver.outputs.version
        uses: peter-evans/create-pull-request@v2.4.4
        with:
          token: ${{ secrets.GH_TOKEN }}
          commit-message: 'chore(release): ${{ steps.extractver.outputs.version }}'
          committer: asyncapi-bot <info@asyncapi.io>
          author: asyncapi-bot <info@asyncapi.io>
          title: 'chore(release): ${{ steps.extractver.outputs.version }}'
          body: 'Version bump in package.json and package-lock.json for release [${{ steps.extractver.outputs.version }}](https://github.com/${{github.repository}}/releases/tag/v${{ steps.extractver.outputs.version }})'
          branch: version-bump/${{ steps.extractver.outputs.version }}

      # Playground
      - name: Build playground
        run: npm run build
        working-directory: ./playground
      - name: Deploy GH page
        uses: JamesIves/github-pages-deploy-action@3.4.2
        with:
          ACCESS_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: playground/build
          GIT_CONFIG_NAME: asyncapi-bot
          GIT_CONFIG_EMAIL: info@asyncapi.io
